#include "monty.h"

char * get_line(**monty_file)

fd = open(monty_file, O_RDONLY);
    if (fd < 0)
    {
        perror("Error: Can't open file");
        return(EXIT_FAILURE);
    }
    f_size = read(fd, buff, num_lett); /*f_size stores the number of charactes of the file*/
    buff[f_size] = 00;



	/**
 * pint - prints the value at the top of the stack, followed by a new line.
 * @stack: a pointer to the stack of the list
 * @line_number: file line number where the op was requested
 * Return: Nothing if success, Error message otherwise
 */
/*
void pint(stack_t **stack, unsigned int line_number)
{
	if (!*stack)
	{
		printf("L%u: can't pop an empty stack", line_number);
		exit (EXIT_FAILURE);
	}
	printf("%i\n", (*stack)->n);
}

/**
 * pop - removes the top element of the stack
 * in a doubly linked list
 * @stack: a double pointer to the stack of the linked list
 * @line_number: file line number where the op was requested
 * Return: the address of the new element, or NULL if it failed
 */
/*
void pop(stack_t **stack, unsigned int line_number)
{
	unsigned int i = 0;
	stack_t *temp = *stack;

	if (!*stack)
		//return (-1); /*AGREGAR MENSAJE DE ERROR*//*
	if (temp->next)
	{
		*stack = temp->next;
		temp->next->prev = NULL;
	}
	else
	{
		*stack = NULL;
	}
	free(temp);
}
*/

/*k = 0;
		while(command[k])
		{
			printf("%s ", command[k]);
			k++;
		}
		printf("\n");
		ejecutar el comando leido*/